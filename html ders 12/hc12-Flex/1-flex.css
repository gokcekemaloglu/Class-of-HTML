/* flex kullandığımızda elemanlar ekran küçüldükçe sıkışır, alta düşmez bu yüzden, wrap:browser küçüldükçe ekrana sığamayan elementler alt satıra geçsin.
wrap-reverse sığmayan elementleri ters çevirir ve öyle alt satıra indirir */

.container{
    background-color: aquamarine;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    justify-content: flex-start;
    justify-content: flex-end;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly;
}

/*! Yatay Hizalama: Justify-content
  /**  /** flex-start: Nesneler kapsayıcının başından başlayarak dizilirler.*/
  /** space-evenly:neseneler arası, en baş ve son eşit boşluk */
  /**space-around: Nesneler arasında eşit boşluklar bırakılır, başa sona yarım boşluk.
  /**space-between: İlk nesne başta, son nesne sonda olacak şekilde nesneler eşit olarak kapsayıcının içerisinde dizilirler.
  /**center: Nesneler tam ortalı olacak şekilde hizalanır.
  /**flex-end: Son nesne ve diğerleri en sağa yaslanacak şekilde hizalanır. */

.container div{
    background-color: blueviolet;
    width: 5rem;
    height: 5rem;
    border: 1px solid red;
}

.container1{
    background-color: aqua;
    height: 20rem;
    display: flex;
    justify-content: flex-end;
    gap: 1rem;
    flex-wrap: wrap;

/* düşeyde yapıştırma alignitems oluyor */
    align-items: center;
    align-items: flex-end;
    align-items: flex-start;

    /* strech komutunu kullanabilmek için height olmamalı */
    /* align-items: stretch; */    
    align-items: baseline;

/*! Dikey Hizalama => align-items
/**flex-start: Nesneler, kapsayıcının en üstünden başlayarak dizilirler.
/**flex-end: Nesneler, kapsayıcının en altından başlayarak, yukarı doğru dizilirler.
/**center: Nesneler ortalı bir şekilde dikey olarak sıralanırlar.
/**baseline: yazıların yerine bakılır, sıradanlığı bozan yazı tipi göz önüne alınarak hizalanmaya başlanılır.
/**stretch: Tüm nesneler kapsayıcı yüksekliğine eşit olacak şekilde dizilirler. özel height ları yoksa çalışır*/

}

.container1 div{
    background-color: pink;
    width: 5rem;
    height: 5rem;
    border: 1px solid red;
    text-align: center
}


/* baseline value özelliğini görebilmek için child lara özellikler verdik */

.container1 div:nth-child(1){
    height: 6rem;

}

.container1 div:nth-child(2){
    padding-top: 4rem;

}

.container1 div:nth-child(3){
    height: 2rem;
    padding: 5rem 0;
    font-size: 5rem;
    /* margin-top: 4rem; */

}

ul{
    background-color: brown;
    height: 30rem;
    list-style-type: none;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    /* align-items: flex-start; */
    align-content: flex-start;
    align-content: flex-end;
    align-content: center;

    /* çok satırlıbir kapsayıcımız varsa child'ları dikeyde hizalamak için alignitems yeterli gelmez. onun yerine tüm childlar etkilensin diye align content kullanırız. */

    gap: 6rem 3rem;

    /* ilk value child'ların, alt-üst boşluğunu sağlıyor, ikinci value da sağ-sol aralarındaki boşluğu temsil eder */
}

ul li{
    background-color: magenta;
    width: 4rem;
    height: 5rem;
}

.container2{
    background-color: yellow;
    padding: 1rem 0;
    display: flex;
    
}

.container2 div{
    background-color: red;
    width: 5rem;
    margin: 1rem;

}

/* baştan verdiğimiz width üstüne browser'ın width'ini altta verdiğim parçalar ölçüsünde kendi width'ine ekliyoruz. */

.grow1{
    flex-grow: 1;
    /* x=5rem */
    /* x+y */
}

.grow2{
    flex-grow: 2;
    /* x+2y */    
}

.grow3{
    flex-grow: 3;
    /* x+3y */
}

.grow4{
    flex-grow: 0;
    /* x */
}


